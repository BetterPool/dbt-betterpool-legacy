{{ 
    config(
        materialized='table', 
        alias='FACT_MEMBER_UNCHURNED',
	tags=["fact"]
    ) 
}}

WITH MIN_PICK_DATE AS (
    SELECT DISTINCT
        MEMBER_EMAIL,
	SOURCE,
        MIN(PICK_DATE) AS FIRST_PICK_DATE
    
    FROM {{ ref('fact_active_entries') }}
    WHERE MEMBER_EMAIL IS NOT NULL
    GROUP BY MEMBER_EMAIL, SOURCE
),
PICK_DATES AS (
    SELECT DISTINCT
        MEMBER_EMAIL,
	SOURCE,
        PICK_DATE AS PICK_DATE,
        lag(PICK_DATE) OVER (PARTITION BY MEMBER_EMAIL ORDER BY PICK_DATE) AS PREVIOUS_PICK_DATE
    
    FROM {{ ref('fact_active_entries') }}
    WHERE YEAR(PICK_DATE) >= 2019
    AND MEMBER_EMAIL IS NOT NULL
    ORDER BY 1 DESC, 2 DESC
),

FINAL AS (
    SELECT 
        PD.MEMBER_EMAIL,
        PD.PICK_DATE,
        PD.PREVIOUS_PICK_DATE,
        DATEDIFF(DAY, PREVIOUS_PICK_DATE, PICK_DATE) AS DAYS_BETWEEN_PICKS,
        PD.PICK_DATE AS UNCHURNED_DATE,
        FISCAL_PERIOD,
        FISCAL_QUARTER,
        PD.SOURCE
        
    FROM PICK_DATES PD
        JOIN MIN_PICK_DATE MIN ON PD.MEMBER_EMAIL = MIN.MEMBER_EMAIL
        JOIN {{ ref('dates') }} D ON PD.PICK_DATE = D.DATE_DAY
    WHERE DAYS_BETWEEN_PICKS > 365
    ORDER BY UNCHURNED_DATE DESC
)

SELECT * FROM FINAL
   ORDER BY UNCHURNED_DATE DESC